{"version":3,"sources":["components/App/logo.svg","themes/light.tsx","themes/base.tsx","themes/dark.tsx","themes/CustomThemeProvider.tsx","components/common/NavigationBar/NavigationDrawer.tsx","components/common/NavigationBar/SettingsComposition.tsx","components/common/NavigationBar/NavigationBar.tsx","utils/stringUtils.tsx","services/assessment.tsx","components/AssessmentList/AssessmentList.tsx","components/Practice/MarkdownElement.tsx","components/Practice/QuestionComponent.tsx","components/Practice/Practice.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","unstable_createMuiStrictModeTheme","palette","type","themes","light","dark","primary","main","contrastText","secondary","error","red","A400","CustomThemeContext","React","createContext","currentTheme","setTheme","str","console","log","CustomThemeProvider","props","children","localStorage","getItem","useState","themeName","_setThemeName","getTheme","contextValue","name","setItem","Provider","value","useStyles","makeStyles","createStyles","toolbar","mixins","navDrawer","breakpoints","up","display","NavigationDrawer","classes","openStatus","handleCloseDrawer","history","useHistory","useContext","handleOnClick","path","push","Drawer","anchor","open","onClose","className","List","Divider","ListItem","button","onClick","ListItemIcon","AddBox","ListItemText","Bookmarks","Info","IconButton","edge","event","RotateLeftOutlined","settingButton","textTransform","SettingsComposition","setOpen","anchorRef","useRef","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","handleSwitchChange","checked","handleResetButton","useEffect","focus","Fragment","ref","aria-controls","undefined","aria-haspopup","Settings","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","disableRipple","backgroundColor","flexGrow","Typography","align","Switch","onChange","tabItems","navDrawerButton","NavigationBar","selectedTab","setSelectedTab","openNavDrawer","setOpenNavDrawer","trigger","useScrollTrigger","listen","location","action","pathname","includes","Slide","appear","direction","in","AppBar","Toolbar","variant","Tabs","_","newValue","Tab","label","MenuOpen","trimNewline","toString","replace","getAssessmentInfos","a","fetch","then","response","text","content","result","match","assessmentInfos","split","map","assessmentInfo","title","link","numQuestions","parseInt","assessmentStatus","trim","filter","item","JSON","stringify","alert","Error","catch","e","getAssessment","partitioned_raw_question_sets","partitionQuestionPaper","length","question_sets","extractQuestionSet","checkQuestionSet","questionSets","questionSet","answer","choice","rawQuestion","questionByLine","question","answerIndex","some","line","idx","slice","join","stringUtils","choiceAnswerDetail","extractChoiceAnswerDetail","rawAnswer","extractAnswerIdx","removeAnswer","extractDetail","detailMatch","detail","choiceAnswerDetailItem","regMatch","choiceAnswer","bool","i","questionPaper","upperBgDiv","height","width","backgroundRepeat","backgroundAttachment","backgroundSize","justifyContent","minHeight","btmBgDiv","marginTop","assessmentItem","itemListTextSecondary","AssessmentList","assessments","setAssessments","search","filterBy","setFilterBy","filteredAssessmentInfos","toLowerCase","elevation","margin","Link","color","href","Grid","container","spacing","xs","TextField","placeholder","helperText","InputLabelProps","shrink","marginLeft","fullWidth","FormControl","InputLabel","htmlFor","Select","native","inputProps","aria-label","Container","maxWidth","border","borderRadius","component","assessment","divider","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","inset","ArrowForward","styles","listItem","markdownItem","background","paper","textAlign","options","overrides","h1","gutterBottom","h2","h3","h4","paragraph","p","li","withStyles","img","Markdown","rootRef","document","querySelector","removeAttribute","setAttribute","querySelectorAll","forEach","block","hljs","highlightBlock","QuestionComponent","setValue","Box","overflow","RadioGroup","choiceItem","FormControlLabel","control","Radio","Practice","useParams","setAssessment","localAssessment","parse","TmpDiv","src","logo","alt","rel","App","exact","render","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","CssBaseline","getElementById"],"mappings":"iUAAe,MAA0B,iC,yPCS1BA,EANDC,YAAkC,CAC9CC,QAAS,CACPC,KAAM,W,QCDJC,EAAgC,CACpCC,QACAC,KCFYL,YAAkC,CAC9CC,QAAS,CACPC,KAAM,OACNI,QAAS,CACPC,KAAM,UACNH,MAAO,kBACPC,KAAM,kBACNG,aAAc,WAEhBC,UAAW,CACTF,KAAM,UACNH,MAAO,qBACPC,KAAM,oBACNG,aAAc,uBAEhBE,MAAO,CACLH,KAAMI,IAAIC,UCXT,IAAMC,EAAqBC,IAAMC,cACtC,CACEC,aAAc,QACdC,SAAU,SAACC,GAAD,OAAiBC,QAAQC,IAAI,gCAoC5BC,EAhCa,SAACC,GAAiB,IAEpCC,EAAaD,EAAbC,SAGFP,EAAeQ,aAAaC,QAAQ,aAAe,QALb,EAQTC,mBAASV,GARA,mBAQrCW,EARqC,KAQ1BC,EAR0B,KAWtC7B,EFlBO,SAAkBA,GAC/B,OAAOI,EAAOJ,GEiBA8B,CAASF,GASjBG,EAAe,CACnBd,aAAcW,EACdV,SAPmB,SAACc,GACpBP,aAAaQ,QAAQ,WAAYD,GACjCH,EAAcG,KAQhB,OACE,cAAClB,EAAmBoB,SAApB,CAA6BC,MAAOJ,EAApC,SACE,cAAC,IAAD,CAAkB/B,MAAOA,EAAzB,SAAiCwB,OCrCjCY,EAAYC,aAAW,SAACrC,GAAD,OACzBsC,YAAa,CACTC,QAASvC,EAAMwC,OAAOD,QACtBE,UAAU,eACLzC,EAAM0C,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,cAoEVC,EAzDU,SAACtB,GACtB,IAAMuB,EAAUV,IACRW,EAAkCxB,EAAlCwB,WAAYC,EAAsBzB,EAAtByB,kBACdC,EAAUC,cAHuB,EAIJC,qBAAWrC,GAAtCG,EAJ+B,EAI/BA,aAAcC,EAJiB,EAIjBA,SAEhBkC,EAAgB,SAACC,GACnBL,IACAC,EAAQK,KAAKD,IAUjB,OACI,eAACE,EAAA,EAAD,CAAQC,OAAO,QAAQC,KAAMV,EAAYW,QAASV,EAAmBW,UAAWb,EAAQL,UAAxF,UACI,qBAAKkB,UAAWb,EAAQP,UACxB,eAACqB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAkBC,QAAS,kBAAMZ,EAAc,qBAA/D,UACI,cAACa,EAAA,EAAD,UAAc,cAACC,EAAA,EAAD,MACd,cAACC,EAAA,EAAD,CAAc5D,QAAQ,sBAFL,cAIrB,eAACuD,EAAA,EAAD,CAAUC,QAAM,EAAiBC,QAAS,kBAAMZ,EAAc,eAA9D,UACI,cAACa,EAAA,EAAD,UAAc,cAACG,EAAA,EAAD,MACd,cAACD,EAAA,EAAD,CAAc5D,QAAQ,gBAFL,aAIrB,eAACuD,EAAA,EAAD,CAAUC,QAAM,EAAgBC,QAAS,kBAAMZ,EAAc,cAA7D,UACI,cAACa,EAAA,EAAD,UAAc,cAACI,EAAA,EAAD,MACd,cAACF,EAAA,EAAD,CAAc5D,QAAQ,eAFL,YAIrB,cAACsD,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UACI,cAACK,EAAA,EAAD,CAAYC,KAAK,QAAQP,QAvBnB,SAACQ,KAuBP,SACI,cAACC,EAAA,EAAD,QAGR,cAACN,EAAA,EAAD,CAAc5D,QAAQ,YANZ,gBAQd,eAACuD,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UACI,cAACK,EAAA,EAAD,CAAYC,KAAK,QAAQP,QAnCnB,SAACQ,GACvBtD,EAA0B,UAAjBD,EAA2B,OAAS,UAkC7B,SACsB,UAAjBA,EAA2B,cAAC,IAAD,IAAkB,cAAC,IAAD,QAGtD,cAACkD,EAAA,EAAD,CAAc5D,QAAQ,iBANZ,uB,iFC5DxB6B,GAAYC,aAAW,SAACrC,GAAD,OACzBsC,YAAa,CACToC,cAAc,aACV9B,QAAS,OACT+B,cAAe,QACd3E,EAAM0C,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,cAmGVgC,GA7Fa,WACxB,IAAM9B,EAAUV,KADc,EAEKe,qBAAWrC,GAAtCG,EAFsB,EAEtBA,aAAcC,EAFQ,EAERA,SAFQ,EAGNH,IAAMY,UAAS,GAHT,mBAGvB8B,EAHuB,KAGjBoB,EAHiB,KAIxBC,EAAY/D,IAAMgE,OAA0B,MAM5CC,EAAc,SAACR,GACbM,EAAUG,SAAWH,EAAUG,QAAQC,SAASV,EAAMW,SAI1DN,GAAQ,IAGZ,SAASO,EAAkBZ,GACL,QAAdA,EAAMa,MACNb,EAAMc,iBACNT,GAAQ,IAKhB,IAAMU,EAAWxE,IAAMgE,OAAOtB,GAExB+B,EAAqB,SAAChB,GACxB,IAAMxE,GAAiC,IAAzBwE,EAAMW,OAAOM,QAAmB,OAAO,QACrDvE,EAASlB,IAGP0F,EAAoB,SAAClB,GACvBQ,EAAYR,IAYhB,OARAzD,IAAM4E,WAAU,YACa,IAArBJ,EAASN,UAA6B,IAATxB,GAC7BqB,EAAUG,QAASW,QAGvBL,EAASN,QAAUxB,IACpB,CAACA,IAGA,eAAC,IAAMoC,SAAP,WACI,cAACvB,EAAA,EAAD,CACIwB,IAAKhB,EACLiB,gBAAetC,EAAO,0BAAuBuC,EAC7CC,gBAAc,OACdjC,QA9CS,WACjBa,GAAQ,SAACU,GAAD,OAAeA,MA8Cf5B,UAAWb,EAAQ4B,cALvB,SAOI,cAACwB,GAAA,EAAD,MAEJ,cAACC,EAAA,EAAD,CAAQ1C,KAAMA,EAAM2C,SAAUtB,EAAUG,QAASoB,UAAML,EAAWM,YAAU,EAACC,eAAa,EAAC5C,UAAWb,EAAQ4B,cAA9G,SACK,gBAAG8B,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACG,cAACC,EAAA,EAAD,2BACQF,GADR,IAEIG,MAAO,CAAEC,gBAA+B,WAAdH,EAAyB,aAAe,iBAFtE,SAII,cAACI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAmBC,YAAa/B,EAAhC,SAEI,eAACgC,EAAA,EAAD,CAAUC,cAAexD,EAAMyD,GAAG,qBAAqBC,UAAW/B,EAAlE,UACI,eAACgC,EAAA,EAAD,CAAUC,eAAa,EAACV,MAAO,CAAEW,gBAAiB,eAAlD,UACI,cAAChD,EAAA,EAAD,CAAYN,QAAS0B,EAArB,SACI,cAACjB,EAAA,EAAD,MAEJ,qBAAKkC,MAAO,CAAEY,SAAU,GAAxB,SACI,cAACC,EAAA,EAAD,CAAYC,MAAM,SAAlB,wBAGR,eAACL,EAAA,EAAD,CAAUC,eAAa,EAACV,MAAO,CAAEW,gBAAiB,eAAlD,UACI,cAACI,EAAA,EAAD,CACIjC,QAA0B,UAAjBxE,EACT0G,SAAUnC,EACVxD,KAAK,sBAET,cAACwF,EAAA,EAAD,6CCvFlCpF,GAAYC,aAAW,SAACrC,GAAD,OACzBsC,YAAa,CACTsF,SAAS,aACLhF,QAAS,OACT+B,cAAe,QACd3E,EAAM0C,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,SAGjBiF,gBAAgB,eACX7H,EAAM0C,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,cAuEVkF,OAhEf,WACI,IAWyBrE,EAXnBR,EAAUC,cACVJ,EAAUV,KAFK,EAIiBT,mBAAS,GAJ1B,mBAIdoG,EAJc,KAIDC,EAJC,OAKqBrG,oBAAS,GAL9B,mBAKdsG,EALc,KAKCC,EALD,KAuBfC,EAAUC,cAgBhB,OAdAzC,qBAAU,WACN1C,EAAQoF,QAAO,SAACC,EAAUC,GACnBD,EAASE,SAASC,SAAS,oBAC1BT,EAAe,GACVM,EAASE,SAASC,SAAS,aAChCT,EAAe,GAEfA,EAAe,QAIxB,CAAC/E,IAIA,cAAC,IAAM4C,SAAP,UACI,cAAC6C,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKV,EAA5C,SACI,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACvB,EAAA,EAAD,CAAYwB,QAAQ,KAApB,0CACA,qBAAKrC,MAAO,CAAEY,SAAU,KACxB,eAAC0B,EAAA,EAAD,CAAM9G,MAAO4F,EAAaJ,SAtCrB,SAACuB,EAA0BC,GAChDnB,EAAemB,IAqCuDxF,UAAWb,EAAQ8E,SAAzE,UACI,cAACwB,EAAA,EAAD,CAAKC,MAAM,kBAAkBrF,QAAS,kBAAMf,EAAQK,KAAK,uBACzD,cAAC8F,EAAA,EAAD,CAAKC,MAAM,YAAYrF,QAAS,kBAAMf,EAAQK,KAAK,gBACnD,cAAC8F,EAAA,EAAD,CAAKC,MAAM,QAAQrF,QAAS,kBAAMf,EAAQK,KAAK,mBAGnD,cAAC,GAAD,IACA,cAACgB,EAAA,EAAD,CAAYX,UAAWb,EAAQ+E,gBAAiB7D,SAzC3CP,GAyCoE,EAzClD,SAACe,IAErB,YAAfA,EAAMrE,MACkC,QAAtCqE,EAA8Ba,KACW,UAAtCb,EAA8Ba,MAIvC6C,EAAiBzE,KAiCD,SAAiF,cAAC6F,EAAA,EAAD,MACjF,cAAC,EAAD,CAAkBvG,WAAYkF,EAAejF,kBAAmB,kBAAMkF,GAAiB,gB,6GCpFlGqB,GAAc,SAACpI,GACxB,OAAOA,EAAIqI,WAAWC,QAAQ,aAAa,KCqBzCC,GAAkB,yCAAG,uBAAAC,EAAA,4DACA,kGADA,kBAGhBC,MAFgB,mGAEMC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAAOF,MAAK,SAAAG,GAC/D,IAAIC,EAASD,EAAQE,MAAM,wBAC3B,GAAa,MAAVD,EAAe,CAEd,IAAIE,GADJF,EAASA,EAAO,GAAGG,MAAM,OACIC,KAAI,SAAAC,GAAmB,IAAD,EAE3CC,GAASD,EAAeJ,MAAM,cAAgB,MAAClE,OAAWA,IAAY,GACtEwE,GAAQF,EAAeJ,MAAM,mBAAqB,MAAClE,OAAWA,IAAY,GAC1EyE,EAAeC,UAAUJ,EAAeJ,MAAM,qBAAuB,CAAC,IAAK,MAAM,IACjFS,EAAgB,WAAIL,EAAeJ,MAAM,4BAA8B,MAAClE,OAAWA,IAAY,UAA/E,aAAG,EAAgF4E,OAIvG,MAAO,CAAC,MAAQL,EAAM,KAFtBC,OAAgBxE,IAATwE,EAAoB,wEAA0EA,EAAKf,QAAQ,OAAO,SAAMzD,EAE5F,aAAeyE,EAAa,iBAAoBE,MAKvF,OAFAR,EAAkBA,EAAgBU,QAAO,SAAAC,GAAI,OAAGA,EAAKP,OAAS,CAAC,eAAe,sBAAsB9B,SAASqC,EAAKH,kBAAoB,OACtIlJ,aAAaQ,QAAQ,kBAAmB8I,KAAKC,UAAUb,IAChDA,EAIP,MADAc,MAAM,uCACA,IAAIC,MAAM,6CAEpBC,OAAM,SAACC,QA3BY,2CAAH,qDA8BlBC,GAAa,yCAAG,WAAOf,GAAP,oBAAAX,EAAA,0DACfW,EAAeE,KADA,iCAEaZ,MAAMU,EAAeE,MAFlC,8BAEyCT,OAFzC,UAEVC,EAFU,OAK8B,KADxCsB,EAAgCC,GAAuBvB,IAC1BwB,OALnB,sBAKuC,IAAIN,MAAM,iCALjD,UAQc,KADxBO,EAAgBH,EAA8BjB,IAAIqB,IAAoBb,OAAOc,KAChEH,OARH,uBASJ,IAAIN,MAAJ,iCAAoCZ,EAAeC,MAAnD,MATI,QAWV9I,aAAaQ,QAAQqI,EAAeC,OAAS,gBAAiBQ,KAAKC,UAAU,CAACV,eAAgBA,EAAgBsB,aAAcH,KAXlH,iCAcP,CAACnB,eAAgBA,EAAgBsB,aAAcH,IAdxC,cAgBR,IAAIP,MAAJ,+BAAkCZ,EAAeC,MAAjD,gBAhBQ,4CAAH,sDAoBboB,GAAmB,SAACE,GACtB,OAAQA,EAAYC,OAAON,OAAS,GAAKK,EAAYE,OAAOP,OAAS,GAGnEE,GAAqB,SAACM,GAExB,IAAIC,EAAiBD,EAAY5B,MAAM,oBAAsB,GAE7D,GAA6B,IAA1B6B,EAAeT,OAAc,MAAM,IAAIN,MAAM,iCAChD,IAAIgB,EAAW,mBACXC,GAAe,EACnBF,EAAeG,MAAK,SAACC,EAAMC,GACvB,QAAGD,EAAKnC,MAAM,8BACVgC,EAAWD,EAAeM,MAAM,EAAED,GAAKE,KAAK,IAC5CL,EAAcG,GACP,MAKfJ,EAAWO,EAAYlD,YAAY2C,GACnC,IAAIJ,EAASG,EAAeM,MAAMJ,GAAaK,KAAK,IAEhDE,EAAqBC,GAA0Bb,GAGnD,OAAO,aAACI,SAAUA,GAAaQ,IAG7BC,GAA4B,SAACC,GAC/B,IAAIF,EAAqBE,EAAUhC,OAAOR,MAAM,iCAC5C0B,EAASe,GAAiBH,GAI9B,MAAO,CAAC,OAHWI,GAAaJ,GAGA,OAAUZ,EAAQ,OAFrCiB,GAAcL,KAKzBK,GAAgB,SAACL,GAInB,IACIM,GAJJN,EAAqBA,EAAmBrC,IAAIoC,EAAYlD,cAGdmD,EAAmBlB,OAAO,GACjCtB,MAAM,cACrC+C,EAASD,EAAcA,EAAY,GAAK,GAgB5C,MAbc,KAAXC,GAECP,EAAmBN,MAAK,SAAAc,GACpB,IAAMC,EAAWD,EAAuBhD,MAAM,iCAC9C,QAAGiD,IACCF,EAASE,EAAS,GAAG1D,QAAQ,8BAA8B,KACpD,MAOD,KAAXwD,EAAgBR,EAAYlD,YAAY0D,QAAUjH,GAGvD6G,GAAmB,SAACO,GAGtB,IAAItB,EAASsB,EAAa/C,KAAI,SAAAS,GAAI,QAAIA,EAAKZ,MAAM,aAIjD,OAFA4B,GAAmC,IAA1BA,EAAOrD,UAAS,GAAkB2E,EAAa/C,KAAI,SAAAS,GAAI,QAAIA,EAAKZ,MAAM,kCAAgD4B,GAEjHzB,KAAI,SAACgD,EAAMC,GAAP,OAAaD,EAAOC,GAAK,KAAGzC,QAAO,SAAAyC,GAAC,OAAW,IAAPA,MAGxDR,GAAe,SAACM,GAClB,IAAIrB,EAASqB,EAAa/C,KAAI,SAAAS,GAAI,OAAIA,EAAKrB,QAAQ,4BAA6B,OAGhF,OAFAsC,EAASA,EAAO1B,KAAI,SAAAS,GAAI,OAAEA,EAAKrB,QAAQ,iCAAkC,QAE3DY,IAAIoC,EAAYlD,cAG5BgC,GAAyB,SAACgC,GAG5B,IAAIvD,GAAWuD,EAAcrD,MAAM,iDAAmD,MAAClE,IAAY,GACnG,OAAGgE,EAGQA,EAAQI,MAAM,oDAAoDS,QAAO,SAAAC,GAAI,OAAEA,EAAKU,OAAS,KAEjG,IC1JLpJ,GAAYC,aAAW,SAACrC,GAAD,OACzBsC,YAAa,CACTkL,WAAY,CACR5K,QAAS,OACT6K,OAAQ,MACRC,MAAO,OACPpG,gBAAiBtH,EAAME,QAAQQ,UAAUF,KACzCmN,iBAAkB,YAClBC,qBAAsB,QACtBC,eAAgB,QAChBC,eAAgB,SAChBC,UAAW,SAGfC,SAAU,CACNpL,QAAS,OACT8K,MAAO,OACPI,eAAgB,SAChBC,UAAW,QACXE,WAAY,IAEhBC,eAAgB,CACZT,OAAQ,OAEZU,sBAAsB,aAClBvL,QAAS,QACR5C,EAAM0C,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,cA0HVwL,GAnHQ,WACnB,IAAMtL,EAAUV,KACVa,EAAUC,cAFS,EAGavB,wBAA4CqE,GAHzD,mBAGlBqI,EAHkB,KAGLC,EAHK,OAIO3M,mBAAS,CAAC4M,OAAO,GAAI5D,iBAAiB,KAJ7C,mBAIlB6D,EAJkB,KAIRC,EAJQ,KAMzB9I,qBAAU,WACN+D,KAAqBG,MAAK,SAAAM,GACtBmE,EAAenE,MAChBgB,OAAM,SAAAC,GAAC,OAAIH,MAAMG,QACrB,IAEH,IAiBMsD,EAHF,OAAOL,QAAP,IAAOA,OAAP,EAAOA,EAAaxD,QAAO,SAAAC,GAAI,eAAI,UAAAA,EAAKP,aAAL,eAAYoE,cAAclG,SAAS+F,EAASD,WAA5C,UAAuDzD,EAAKH,wBAA5D,aAAuD,EAAuBgE,cAAclG,SAAS+F,EAAS7D,sBAOrJ,OACI,gCACI,qBAAKhH,UAAWb,EAAQ0K,aACxB,qBAAK7J,UAAWb,EAAQkL,SAAxB,SACI,eAACnH,EAAA,EAAD,CAAO+H,UAAW,EAAGjI,MAAO,CAAE+G,MAAO,QAArC,UACI,qBAAK/G,MAAO,CAAE8G,OAAQ,SACtB,cAACjG,EAAA,EAAD,CAAYwB,QAAQ,KAAKrC,MAAO,CAAEkI,OAAQ,IAA1C,+CACA,cAACrH,EAAA,EAAD,CAAYwB,QAAQ,KAAKrC,MAAO,CAAEkI,OAAQ,IAA1C,SACI,cAACC,GAAA,EAAD,CAAMC,MAAM,gBAAgBC,KAAK,kEAAjC,yDAIJ,cAACnL,EAAA,EAAD,IACA,eAACoL,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,GAAA,EAAD,CAAMnE,MAAI,EAACsE,GAAI,IACf,cAACH,GAAA,EAAD,CAAMnE,MAAI,EAACsE,GAAI,EAAf,SACI,cAACC,GAAA,EAAD,CAEInI,GAAG,sBACHmC,MAAM,SACNiG,YAAY,eACZC,WAAW,oBACX5H,SA3CD,SAACnD,GACxBiK,EAAY,2BAAID,GAAL,IAAeD,OAAQ/J,EAAMW,OAAOhD,UA2CvB0M,OAAO,SACPW,gBAAiB,CACbC,QAAQ,GAEZ9I,MAAO,CAAE+I,WAAY,MACrB1G,QAAQ,WACR2G,WAAS,MAGjB,cAACV,GAAA,EAAD,CAAMnE,MAAI,EAACsE,GAAI,EAAf,SACI,eAACQ,GAAA,EAAD,CAAa5G,QAAQ,WAAW6F,OAAO,SAASlI,MAAO,CAAE+G,MAAO,OAAhE,UACI,cAACmC,GAAA,EAAD,CAAYC,QAAQ,6BAApB,oBACA,eAACC,GAAA,EAAD,CACIC,QAAM,EACN3G,MAAM,SACN4G,WAAY,CACRjO,KAAM,MACNkF,GAAI,8BAERS,SA1DK,SAACnD,GAEd,kBADNA,EAAMW,OAAOhD,OAAS,KAEhCsM,EAAY,2BAAID,GAAL,IAAe7D,iBAAkBnG,EAAMW,OAAOhD,UAgDrC,UASI,wBAAQ+N,aAAW,OAAO/N,MAAM,KAChC,wBAAQA,MAAM,cAAd,0BACA,wBAAQA,MAAM,qBAAd,gCACA,wBAAQA,MAAM,mBAAd,sCAIZ,cAAC8M,GAAA,EAAD,CAAMnE,MAAI,EAACsE,GAAI,OAGlBV,EAA0B,cAACyB,GAAA,EAAD,CAAWC,SAAS,KAAKzJ,MAAO,CAAE0J,OAAQ,+BAAgCC,aAAc,IAAxF,SACvB,cAAC1M,EAAA,EAAD,CAAM2M,UAAU,MAAhB,SAEQ7B,EAAwBrE,KAAI,SAACmG,EAAYlE,GAAb,OACxB,cAAC,IAAMzG,SAAP,UACI,eAAC/B,EAAA,EAAD,CAAU2M,SAAO,EAAC1M,QAAM,EAACsD,eAAa,EAAC1D,UAAWb,EAAQoL,eACtDvH,MACY,IAAR2F,EAAY,CAAEoE,oBAAqB,GAAIC,qBAAsB,IACzDrE,IAAQoC,EAAwBlD,OAAS,EAAI,CAAEoF,uBAAwB,GAAIC,wBAAyB,IAChG,CAAEP,aAAc,GAJhC,UAMI,cAACnM,EAAA,EAAD,CAAc2M,OAAK,EAACvQ,QAASiQ,EAAWjG,MAAO7J,UAAW,sBAAMiD,UAAWb,EAAQqL,sBAAzB,mBAAoDqC,EAAW/F,aAA/D,sBAAyF+F,EAAW7F,sBAE9J,cAACrG,EAAA,EAAD,CAAYN,QAAS,kBAAKf,EAAQK,KAAR,oBAA0BkN,EAAWjG,SAA/D,SAAyE,cAACwG,GAAA,EAAD,UAT5DP,EAAWjG,cAejC,c,sFC1I7ByG,GAAS,SAAChR,GAAD,OACXsC,YAAa,CACT2O,SAAU,CACNhD,UAAWjO,EAAMmP,QAAQ,IAE7B+B,aAAc,CACV5J,gBAAiBtH,EAAME,QAAQiR,WAAWC,MAC1CC,UAAW,OACX3D,MAAM,WAKZtL,GAAYC,YAAW2O,IAEvBM,GAAU,CACZC,UAAW,CACPC,GAAI,CACAjB,UAAW/I,IACXjG,MAAO,CACHkQ,cAAc,EACdzI,QAAS,OAGjB0I,GAAI,CAAEnB,UAAW/I,IAAYjG,MAAO,CAAEkQ,cAAc,EAAMzI,QAAS,OACnE2I,GAAI,CAAEpB,UAAW/I,IAAYjG,MAAO,CAAEkQ,cAAc,EAAMzI,QAAS,YAAarC,MAAM,CAACkI,OAAO,YAC9F+C,GAAI,CACArB,UAAW/I,IACXjG,MAAO,CAAEkQ,cAAc,EAAMzI,QAAS,UAAW6I,WAAW,IAEhEC,EAAG,CAAEvB,UAAW/I,IAAYjG,MAAO,CAAEsQ,WAAW,IAChDlI,EAAG,CAAE4G,UAAWzB,MAChBiD,GAAI,CACAxB,UAAWyB,aAAWhB,GAAXgB,EAAmB,gBAAGlP,EAAH,EAAGA,QAAYvB,EAAf,mCAC1B,oBAAIoC,UAAWb,EAAQmO,SAAvB,SACI,cAACzJ,EAAA,EAAD,aAAY+I,UAAU,QAAWhP,UAI7C0Q,IAAI,CACA1Q,MAAM,CAAEoF,MAAM,CAACyJ,SAAS,YAKrB,SAAS8B,GAAS3Q,GAC7B,IAAMuB,EAAUV,KACV+P,EAAUpN,iBAAuB,MAC/B9D,EAAiBkC,qBAAWrC,GAA5BG,aAiBR,OAfA0E,qBAAU,WAAO,IAAD,EACkB,QAGvB,QAHc,UAAjB1E,GACQ,QAAR,EAAAmR,gBAAA,mBAAUC,cAAV,uCAAgDC,gBAAgB,YACxD,QAAR,EAAAF,gBAAA,mBAAUC,cAAV,sCAA+CE,aAAa,WAAY,cAEhE,QAAR,EAAAH,gBAAA,mBAAUC,cAAV,sCAA+CC,gBAAgB,YACvD,QAAR,EAAAF,gBAAA,mBAAUC,cAAV,uCAAgDE,aAAa,WAAY,aAGtE,OAAPJ,QAAO,IAAPA,GAAA,UAAAA,EAASlN,eAAT,SAAkBuN,iBAAiB,YAAYC,SAAQ,SAACC,GACpDC,KAAKC,eAAeF,QAGzB,CAACP,EAASlR,IAEN,qBAAK0C,UAAWb,EAAQoO,aAAcpL,IAAKqM,EAA3C,SAAqD,cAAC,KAAD,aAAeb,QAASA,IAAa/P,MClErG,IA2BesR,GA3BW,SAACtR,GAAkB,IACjCsK,EAAgBtK,EAAhBsK,YADgC,EAEdlK,mBAAwB,MAFV,mBAEjCQ,EAFiC,KAE1B2Q,EAF0B,KASxC,OACI,mCACI,eAACC,GAAA,EAAD,CAAKnQ,QAAQ,QAAQoQ,SAAS,SAASrM,MAAO,CAACsH,UAAU,QAAzD,UACA,cAACiE,GAAD,UAAWrG,EAAYK,WACvB,cAAC0D,GAAA,EAAD,CAAaW,UAAU,WAAvB,SACI,cAAC0C,GAAA,EAAD,CAAYtM,MAAO,CAAC+I,WAAW,QAASQ,aAAW,SAASlO,KAAK,UAAUG,MAAOA,EAAOwF,SAVhF,SAACnD,GAClBsO,EAASpI,SAAUlG,EAAMW,OAA4BhD,SAS7C,SACK0J,EAAYE,OAAO1B,KAAI,SAAC6I,EAAY5G,GAAb,OAAqB,cAAC6G,GAAA,EAAD,CAA4BhR,MAAOmK,EAAK8G,QAAS,cAACC,GAAA,EAAD,IAAWhK,MAAO,cAAC6I,GAAD,UAAWgB,KAAvD5G,gBCuBzEgH,GAvCE,WAAO,IACZ/I,EAAUgJ,cAAVhJ,MADW,EAEiB5I,qBAFjB,mBAEZ6O,EAFY,KAEAgD,EAFA,KA4BnB,OAtBA7N,qBAAU,WACN,IAAM8N,EAAkBhS,aAAaC,QAAQ6I,GAEzCkJ,GACAD,EAAczI,KAAK2I,MAAMD,IACzBrS,QAAQC,IAAI,gCAEZD,QAAQC,IAAI,kCACZqI,KAAqBG,MAAK,SAAAM,GACtB,IAAMG,EAAc,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAiBU,QAAO,SAAAP,GAAc,OAAIA,EAAeC,QAAUA,KAAO,GAC7FD,EACAe,GAAcf,GAAgBT,MAAK,SAAA2G,GAAU,OAAIgD,EAAchD,MAG/DvF,MAAM,qCAMnB,CAACV,IAGA,cAAC4F,GAAA,EAAD,UACI,cAACvM,EAAA,EAAD,iBACK4M,QADL,IACKA,OADL,EACKA,EAAY5E,aAAavB,KAAI,SAACwB,EAAaS,GAAd,OAAsB,cAACxI,EAAA,EAAD,UAChD,cAAC,GAAD,CAAmB+H,YAAaA,KAD+BS,WC7B7EqH,GAAS,SAACpS,GAAgC,IACtCyI,EAAYzI,EAAZyI,QAER,OAAQ,yBAAQrG,UAAU,aAAlB,UACN,qBAAKiQ,IAAKC,EAAMlQ,UAAU,WAAWmQ,IAAI,SACzC,sCACO,+BAAO9J,IADd,0BAGA,mBACErG,UAAU,WACVqL,KAAK,sBACL7J,OAAO,SACP4O,IAAI,sBAJN,6BAsCWC,OAzBf,WAEE,OACE,qBAAKrQ,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsQ,OAAK,EAAC5Q,KAAK,IAAI6Q,OACpB,kBAAM,cAAC,IAAD,CAAUC,GAAG,wBAErB,cAAC,IAAD,CAAOF,OAAK,EAAC5Q,KAAK,mBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO4Q,OAAK,EAAC5Q,KAAK,YAAlB,SACE,cAAC,GAAD,CAAQ2G,QAAS,wBCjCdoK,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzK,MAAK,YAAkD,IAA/C0K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCAdO,IAASV,OAEL,eAAC,EAAD,WACE,cAACW,GAAA,EAAD,IACA,cAAC,GAAD,OAGHzC,SAAS0C,eAAe,SAM3BV,O","file":"static/js/main.16ff2a68.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { unstable_createMuiStrictModeTheme } from '@material-ui/core/styles'\n\n// Normal or default theme\nconst theme = unstable_createMuiStrictModeTheme({\n  palette: {\n    type: \"light\"\n  },\n})\n\nexport default theme","import light from './light'\nimport dark from './dark'\nimport { Theme } from '@material-ui/core'\n\nconst themes:{[key: string]: Theme} = {\n  light,\n  dark,\n}\n\nexport default function getTheme(theme:string) {\n  return themes[theme]\n}","import { unstable_createMuiStrictModeTheme } from '@material-ui/core/styles'\nimport { red } from '@material-ui/core/colors'\n\n// Dark theme\nconst theme = unstable_createMuiStrictModeTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#26292C',\n      light: 'rgb(81, 91, 95)',\n      dark: 'rgb(26, 35, 39)',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#FFB74D',\n      light: 'rgb(255, 197, 112)',\n      dark: 'rgb(200, 147, 89)',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n})\n\nexport default theme","import React, { useState } from 'react'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport getTheme from './base'\n\ntype Props = {\n  children: React.ReactNode\n}\n\n// eslint-disable-next-line no-unused-vars\nexport const CustomThemeContext = React.createContext(\n  {\n    currentTheme: 'light',\n    setTheme: (str: string) => console.log(\"setTheme function is null\"),\n  },\n)\n\nconst CustomThemeProvider = (props: Props) => {\n  // eslint-disable-next-line react/prop-types\n  const { children } = props\n\n  // Read current theme from localStorage or maybe from an api\n  const currentTheme = localStorage.getItem('appTheme') || 'light'\n\n  // State to hold the selected theme name\n  const [themeName, _setThemeName] = useState(currentTheme)\n\n  // Retrieve the theme object by theme name\n  const theme = getTheme(themeName)\n  // console.log(theme)\n\n  // Wrap _setThemeName to store new theme names in localStorage\n  const setThemeName = (name: string) => {\n    localStorage.setItem('appTheme', name)\n    _setThemeName(name)\n  }\n\n  const contextValue = {\n    currentTheme: themeName,\n    setTheme: setThemeName,\n  }\n\n  return (\n    <CustomThemeContext.Provider value={contextValue}>\n      <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>\n    </CustomThemeContext.Provider>\n  )\n}\n\nexport default CustomThemeProvider","import { createStyles, Divider, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Theme } from \"@material-ui/core\"\nimport { Bookmarks, AddBox, Info, RotateLeftOutlined, Brightness4 as DarkButton, Brightness7 as LightButton } from \"@material-ui/icons\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CustomThemeContext } from \"../../../themes/CustomThemeProvider\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        toolbar: theme.mixins.toolbar,\n        navDrawer: {\n            [theme.breakpoints.up(\"md\")]: {   // desktop\n                display: \"none\"\n            }\n        }\n    }),\n);\n\ninterface Props {\n    openStatus: boolean\n    handleCloseDrawer: () => void\n}\n\nconst NavigationDrawer = (props: Props) => {\n    const classes = useStyles()\n    const { openStatus, handleCloseDrawer } = props\n    const history = useHistory();\n    const { currentTheme, setTheme } = useContext(CustomThemeContext)\n\n    const handleOnClick = (path: string) => {\n        handleCloseDrawer();\n        history.push(path);\n    }\n\n    const handleSwitchTheme = (event: React.MouseEvent<EventTarget>) => {\n        setTheme(currentTheme === \"light\" ? \"dark\" : \"light\")\n    }\n\n    const handleResetButton = (event: React.MouseEvent<EventTarget>) => {\n    }\n\n    return (\n        <Drawer anchor=\"right\" open={openStatus} onClose={handleCloseDrawer} className={classes.navDrawer}>\n            <div className={classes.toolbar} />\n            <List>\n                <Divider />\n                <ListItem button key=\"assessment\" onClick={() => handleOnClick(\"/assessment-list\")}>\n                    <ListItemIcon><AddBox /></ListItemIcon>\n                    <ListItemText primary=\"Assessment List\" />\n                </ListItem>\n                <ListItem button key=\"practices\" onClick={() => handleOnClick(\"/practices\")}>\n                    <ListItemIcon><Bookmarks /></ListItemIcon>\n                    <ListItemText primary=\"Practices\" />\n                </ListItem>\n                <ListItem button key=\"about-me\" onClick={() => handleOnClick(\"/about-me\")}>\n                    <ListItemIcon><Info /></ListItemIcon>\n                    <ListItemText primary=\"About Me\" />\n                </ListItem>\n                <Divider />\n                <ListItem key=\"reset-button\" >\n                    <ListItemIcon >\n                        <IconButton edge=\"start\" onClick={handleResetButton}>\n                            <RotateLeftOutlined />\n                        </IconButton>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Reset\" />\n                </ListItem>\n                <ListItem key=\"switch-theme\" >\n                    <ListItemIcon>\n                        <IconButton edge=\"start\" onClick={handleSwitchTheme}>\n                            {currentTheme === \"light\" ? <LightButton /> : <DarkButton />}\n                        </IconButton>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dark Theme\" />\n                </ListItem>\n            </List>\n        </Drawer >\n    )\n}\n\nexport default NavigationDrawer;","// REFERENCE: https://material-ui.com/components/menus/#menulist-composition\nimport { ClickAwayListener, createStyles, Grow, IconButton, makeStyles, MenuItem, MenuList, Paper, Popper, Switch, Theme, Typography } from \"@material-ui/core\";\nimport { RotateLeftOutlined, Settings } from \"@material-ui/icons\";\nimport React, { useContext } from \"react\";\nimport { CustomThemeContext } from \"../../../themes/CustomThemeProvider\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        settingButton: {\n            display: \"none\",\n            textTransform: \"none\",\n            [theme.breakpoints.up(\"md\")]: {   // desktop\n                display: \"flex\"\n            }\n        },\n    }),\n);\n\nconst SettingsComposition = () => {\n    const classes = useStyles();\n    const { currentTheme, setTheme } = useContext(CustomThemeContext)\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const theme = event.target.checked === true ? \"dark\":\"light\"\n        setTheme(theme)\n    }\n\n    const handleResetButton = (event: React.MouseEvent<EventTarget>) => {\n        handleClose(event)\n        \n    }\n\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <React.Fragment>\n            <IconButton\n                ref={anchorRef}\n                aria-controls={open ? 'settings-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                className={classes.settingButton}\n            >\n                <Settings />\n            </IconButton>\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal className={classes.settingButton}>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                {/* <SettingsMenu open={open} id=\"settings-list-grow\" handleClose={handleClose} handleListKeyDown={handleListKeyDown} /> */}\n                                <MenuList autoFocusItem={open} id=\"settings-list-grow\" onKeyDown={handleListKeyDown}>\n                                    <MenuItem disableRipple style={{ backgroundColor: 'transparent' }}>\n                                        <IconButton onClick={handleResetButton}>\n                                            <RotateLeftOutlined />\n                                        </IconButton>\n                                        <div style={{ flexGrow: 1 }}>\n                                            <Typography align=\"center\">Reset</Typography>\n                                        </div>\n                                    </MenuItem>\n                                    <MenuItem disableRipple style={{ backgroundColor: 'transparent' }}>\n                                        <Switch\n                                            checked={currentTheme === \"light\" ? false : true}\n                                            onChange={handleSwitchChange}\n                                            name=\"dark-theme-switch\"\n                                        />\n                                        <Typography>Dark Theme</Typography>\n                                    </MenuItem>\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </React.Fragment>\n    )\n}\n\nexport default SettingsComposition;","import React, { useEffect, useState } from 'react'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuOpen } from \"@material-ui/icons\";\nimport { createStyles, IconButton, makeStyles, Tabs, Tab, Theme } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport NavigationDrawer from './NavigationDrawer';\nimport SettingsComposition from './SettingsComposition';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        tabItems: {\n            display: \"none\",\n            textTransform: \"none\",\n            [theme.breakpoints.up(\"md\")]: {   // desktop\n                display: \"flex\"\n            }\n        },\n        navDrawerButton: {\n            [theme.breakpoints.up(\"md\")]: { // desktop\n                display: \"none\"\n            }\n        }\n    }),\n);\n\n\nfunction NavigationBar() {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [openNavDrawer, setOpenNavDrawer] = useState(false);\n\n\n    const handleChangeTabs = (_: React.ChangeEvent<{}>, newValue: number) => {\n        setSelectedTab(newValue);\n    };\n\n    const toggleNavDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent,) => {\n        if (\n            event.type === 'keydown' &&\n            ((event as React.KeyboardEvent).key === 'Tab' ||\n                (event as React.KeyboardEvent).key === 'Shift')\n        ) {\n            return;\n        }\n        setOpenNavDrawer(open)\n    }\n\n    const trigger = useScrollTrigger();\n\n    useEffect(()=>{\n        history.listen((location, action)=>{\n            if(location.pathname.includes('/assessment-list')){\n                setSelectedTab(0)\n            }else if(location.pathname.includes('/practice')){\n                setSelectedTab(1)\n            }else{\n                setSelectedTab(2)\n            }\n        })\n\n    }, [history])\n\n\n    return (\n        <React.Fragment>\n            <Slide appear={false} direction=\"down\" in={!trigger}>\n                <AppBar>\n                    <Toolbar>\n                        <Typography variant=\"h6\">LinkedIn Practice Assessment</Typography>\n                        <div style={{ flexGrow: 1 }} />\n                        <Tabs value={selectedTab} onChange={handleChangeTabs} className={classes.tabItems}>\n                            <Tab label=\"Assessment List\" onClick={() => history.push(\"/assessment-list\")} />\n                            <Tab label=\"Practices\" onClick={() => history.push(\"/practice\")} />\n                            <Tab label=\"About\" onClick={() => history.push(\"/about-me\")} />\n                        </Tabs>\n\n                        <SettingsComposition />\n                        <IconButton className={classes.navDrawerButton} onClick={toggleNavDrawer(true)} ><MenuOpen /></IconButton>\n                        <NavigationDrawer openStatus={openNavDrawer} handleCloseDrawer={() => setOpenNavDrawer(false)} />\n\n\n                    </Toolbar>\n                </AppBar>\n            </Slide>\n        </React.Fragment>\n    );\n}\n\nexport default NavigationBar;","export const trimNewline = (str:string) => {\n    return str.toString().replace(/^\\n+|\\n+$/g,\"\")\n}","import { stringUtils } from '../utils'\n\nexport interface AssessmentInfo {\n    title?:string;\n    link?: string;\n    numQuestions: number;\n    assessmentStatus?: string;\n}\n\nexport interface QuestionSet {\n    question: string;\n    choice: string[];\n    answer: number[];\n    detail?: string;\n}\n\nexport interface Assessment {\n    assessmentInfo: AssessmentInfo\n    questionSets: Array<QuestionSet>\n}\n\n\nconst getAssessmentInfos = async (): Promise<Array<AssessmentInfo> | undefined> =>{\n    const assessmentsURL = \"https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/README.md\"\n        \n    return fetch(assessmentsURL).then(response => response.text().then(content=>{\n        let result = content.match(/\\| \\[Adobe(.|\\n)*\\|/g)\n        if(result != null){\n            result = result[0].split('\\n')\n            let assessmentInfos = result.map(assessmentInfo => {\n                \n                let title = (assessmentInfo.match(/\\[(.*)\\]/i) || [undefined, undefined])[1];\n                let link = (assessmentInfo.match(/\\[.*\\]\\((.*)\\)/) || [undefined, undefined])[1];\n                let numQuestions = parseInt((assessmentInfo.match(/=>(.*)questions/i) || ['0', '0'])[1]);\n                let assessmentStatus = (assessmentInfo.match(/questions\\s+\\|(.*)\\s+\\|/) || [undefined, undefined])[1]?.trim();\n\n                link = link !== undefined? \"https://raw.githubusercontent.com/Ebazhanov/in-quiz-questions/master/\" + link.replace(/<|>/g,\"\") : undefined\n                \n                return {\"title\":title,\"link\":link, \"numQuestions\":numQuestions,\"assessmentStatus\": assessmentStatus}\n            })\n            \n            assessmentInfos = assessmentInfos.filter(item=> item.title && ['with answers','partially answered'].includes(item.assessmentStatus || \"\"))\n            localStorage.setItem(\"assessmentInfos\", JSON.stringify(assessmentInfos))\n            return assessmentInfos\n        }\n        else{\n            alert(\"Failed to parse list of assessment.\")\n            throw new Error(\"Failed to parse list of assessment.\")\n        }\n    })).catch((e) => undefined)\n}\n\nconst getAssessment = async (assessmentInfo: AssessmentInfo) : Promise<Assessment>  => {\n    if(assessmentInfo.link){\n        let content = await (await fetch(assessmentInfo.link)).text()\n\n        let partitioned_raw_question_sets = partitionQuestionPaper(content);\n        if(partitioned_raw_question_sets.length === 0){throw new Error(\"Failed to partition question.\")}\n\n        let question_sets = partitioned_raw_question_sets.map(extractQuestionSet).filter(checkQuestionSet)\n        if(question_sets.length === 0){\n            throw new Error(`No question parsed for ${assessmentInfo.title}.`)\n        }else{\n            localStorage.setItem(assessmentInfo.title || \"default_title\", JSON.stringify({assessmentInfo: assessmentInfo, questionSets: question_sets}))\n        }\n        \n        return {assessmentInfo: assessmentInfo, questionSets: question_sets}\n    }else{\n        throw new Error(`Link to Question for ${assessmentInfo.title} not found.`)\n    }\n}\n\nconst checkQuestionSet = (questionSet: QuestionSet) => {\n    return (questionSet.answer.length > 0 && questionSet.choice.length > 3)\n}\n\nconst extractQuestionSet = (rawQuestion: string) : QuestionSet => {\n    \n    let questionByLine = rawQuestion.split(/(?<=\\s{0,1}\\n)/g) || []\n    \n    if(questionByLine.length === 0){throw new Error(\"Failed to break down question\")}\n    let question = \"default question\"\n    let answerIndex = -1\n    questionByLine.some((line, idx)=>{\n        if(line.match(/-\\s{0,1}\\[[x{0,1}|\\s]\\]/i)){\n            question = questionByLine.slice(0,idx).join(\"\")\n            answerIndex = idx\n            return true\n        }else{\n            return false\n        }\n    })\n    question = stringUtils.trimNewline(question)\n    let answer = questionByLine.slice(answerIndex).join(\"\")\n\n    let choiceAnswerDetail = extractChoiceAnswerDetail(answer)\n\n\n    return {question: question, ...choiceAnswerDetail}\n}\n\nconst extractChoiceAnswerDetail = (rawAnswer:string) =>{\n    let choiceAnswerDetail = rawAnswer.trim().split(/(?=-\\s{0,1}\\[[x{0,1}|\\s]\\])/ig)\n    let answer = extractAnswerIdx(choiceAnswerDetail)\n    let choiceDetail = removeAnswer(choiceAnswerDetail)\n    let detail = extractDetail(choiceAnswerDetail)\n    \n    return {\"choice\": choiceDetail, \"answer\": answer, \"detail\": detail}\n}\n\nconst extractDetail = (choiceAnswerDetail: Array<string>) : string | undefined => {\n    choiceAnswerDetail = choiceAnswerDetail.map(stringUtils.trimNewline)\n\n    // Assume Details at last\n    let lastChoiceDetail = choiceAnswerDetail[choiceAnswerDetail.length-1]\n    let detailMatch = lastChoiceDetail.match(/\\n{2,}.*$/g)\n    let detail = detailMatch ? detailMatch[0] : \"\"\n\n    // Assume Details behind `<< Correct`\n    if(detail === \"\"){\n        \n        choiceAnswerDetail.some(choiceAnswerDetailItem=>{\n            const regMatch = choiceAnswerDetailItem.match(/<{2,3}-{0,3}\\s{0,1}CORRECT.*/i)\n            if(regMatch){\n                detail = regMatch[0].replace(/<{2,3}-{0,3}\\s{0,1}CORRECT/i,\"\")\n                return true\n            }else{\n                return false\n            }\n        })\n    }\n\n    return detail !== \"\" ? stringUtils.trimNewline(detail) : undefined\n}\n\nconst extractAnswerIdx = (choiceAnswer: Array<string>) => {\n    // choiceAnswer = choiceAnswer.map(item=>item.replace(/\\[x\\]/i, \"<<--- Correct\"))\n\n    let answer = choiceAnswer.map(item => item.match(/\\[x\\]/i)? true : false)\n    \n    answer = answer.includes(true) === false ? choiceAnswer.map(item => item.match(/<{2,3}-{0,3}\\s{0,1}CORRECT/i)? true : false) : answer\n    \n    return answer.map((bool, i) => bool ? i : -1).filter(i => i !== -1);\n}\n\nconst removeAnswer = (choiceAnswer: Array<string>) => {\n    let choice = choiceAnswer.map(item => item.replace(/-\\s{0,1}\\[[x{0,1}|\\s]\\]/ig, \"\"))\n    choice = choice.map(item=>item.replace(/<{2,3}-{0,3}\\s{0,1}CORRECT.*/ig, \"\"))\n\n    return choice.map(stringUtils.trimNewline)\n}\n\nconst partitionQuestionPaper = (questionPaper:string): Array<string> => {\n    //EXAMPLE: #### Q 14.\n\n    let content = (questionPaper.match(/#{3,4}\\s{0,1}Q{0,1}\\.{0,1}\\s{0,1}\\d+(.|\\n)*/g) || [undefined])[0];\n    if(content){\n        // return content.match(/#{2,4}\\s{0,1}Q{0,1}\\.{0,1}\\d+[^#]*/g) || []\n        // return content.split(/\\n#{3,4}\\s{0,1}Q{0,1}\\.{0,1}\\d+\\.{0,1}/)\n        return content.split(/(?=#{3,4}\\s{0,1}Q{0,1}\\.{0,1}\\s{0,1}\\d+\\.{0,1})/g).filter(item=>item.length > 4)\n    } \n    return [];\n}\n\n\nexport { getAssessmentInfos, getAssessment, extractQuestionSet, partitionQuestionPaper, extractChoiceAnswerDetail };\n\n","import { Container, createStyles, Divider, FormControl, Grid, IconButton, InputLabel, Link, List, ListItem, ListItemText, makeStyles, Paper, Select, TextField, Theme, Typography } from \"@material-ui/core\"\nimport { ArrowForward } from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AssessmentInfo, getAssessmentInfos } from \"../../services/assessment\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        upperBgDiv: {\n            display: \"flex\",\n            height: \"5vh\",\n            width: \"100%\",\n            backgroundColor: theme.palette.secondary.main,\n            backgroundRepeat: \"no-repeat\",\n            backgroundAttachment: \"fixed\",\n            backgroundSize: \"cover\",\n            justifyContent: \"center\",\n            minHeight: \"300px\"\n\n        },\n        btmBgDiv: {\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"center\",\n            minHeight: \"600px\",\n            marginTop: -80\n        },\n        assessmentItem: {\n            height: \"6vh\"\n        },\n        itemListTextSecondary: {\n            display: \"none\",\n            [theme.breakpoints.up(\"md\")]: {   // desktop\n                display: \"flex\"\n            }\n        }\n\n    }),\n);\n\nconst AssessmentList = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [assessments, setAssessments] = useState<Array<AssessmentInfo> | undefined>(undefined);\n    const [filterBy, setFilterBy] = useState({search:\"\", assessmentStatus:\"\"})\n\n    useEffect(() => {\n        getAssessmentInfos().then(assessmentInfos => {\n            setAssessments(assessmentInfos)\n        }).catch(e => alert(e))\n    }, [])\n\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterBy({...filterBy, search: event.target.value})\n        // setFilteredAssessments(assessments?.filter(item => item.title?.toLowerCase().includes(event.target.value)))\n    }\n\n    const handleAssessmentStatusChange = (event: React.ChangeEvent<{ value: string | unknown }>) => {\n        const value = event.target.value || \"\"\n        if(typeof value === \"string\"){\n            setFilterBy({...filterBy, assessmentStatus: event.target.value as string})\n            // setFilteredAssessments(assessments?.filter(item => item.assessmentStatus?.toLowerCase().includes(event.target.value as string)))\n        }\n    }\n\n    const filterAssessmentInfos = () =>{\n        return assessments?.filter(item => item.title?.toLowerCase().includes(filterBy.search) && item.assessmentStatus?.toLowerCase().includes(filterBy.assessmentStatus))\n    }\n\n    const filteredAssessmentInfos = filterAssessmentInfos();\n    \n\n\n    return (\n        <div>\n            <div className={classes.upperBgDiv} />\n            <div className={classes.btmBgDiv}>\n                <Paper elevation={3} style={{ width: \"85vw\" }}>\n                    <div style={{ height: \"2vh\" }} />\n                    <Typography variant=\"h3\" style={{ margin: 16 }}>LinkedIn Assessment Practice List</Typography>\n                    <Typography variant=\"h5\" style={{ margin: 16 }}>\n                        <Link color=\"textSecondary\" href=\"https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes\">\n                            LinkedIn assessment practices from GitHub\n                        </Link>\n                    </Typography>\n                    <Divider />\n                    <Grid container spacing={1}>\n                        <Grid item xs={1} />\n                        <Grid item xs={6}>\n                            <TextField\n\n                                id=\"outlined-full-width\"\n                                label=\"Search\"\n                                placeholder=\"type here...\"\n                                helperText=\"Search Assessment\"\n                                onChange={handleSearchChange}\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                style={{ marginLeft: \"1%\" }}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={4}>\n                            <FormControl variant=\"outlined\" margin=\"normal\" style={{ width: \"90%\" }}>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Status</InputLabel>\n                                <Select\n                                    native\n                                    label=\"Status\"\n                                    inputProps={{\n                                        name: 'age',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                    onChange={handleAssessmentStatusChange}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"with answer\">with answers</option>\n                                    <option value=\"partially answered\">partially answered</option>\n                                    <option value=\"answers required\">answers required</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={1} />\n                    </Grid>\n\n                    {filteredAssessmentInfos ? <Container maxWidth=\"sm\" style={{ border: \"1px solid rgb(212, 212, 212)\", borderRadius: 25 }}>\n                        <List component=\"nav\">\n                            {\n                                filteredAssessmentInfos.map((assessment, idx) =>\n                                    <React.Fragment key={assessment.title}>\n                                        <ListItem divider button disableRipple className={classes.assessmentItem}\n                                            style={\n                                                idx === 0 ? { borderTopLeftRadius: 15, borderTopRightRadius: 15 } :\n                                                    idx === filteredAssessmentInfos.length - 1 ? { borderBottomLeftRadius: 15, borderBottomRightRadius: 15 } :\n                                                        { borderRadius: 0 }\n                                            }>\n                                            <ListItemText inset primary={assessment.title} secondary={<span className={classes.itemListTextSecondary}>{`${assessment.numQuestions} questions ${assessment.assessmentStatus}`}</span>}></ListItemText>\n\n                                            <IconButton onClick={()=> history.push(`/practice/${assessment.title}`)}><ArrowForward /></IconButton>\n                                        </ListItem>\n                                    </React.Fragment>\n                                )\n                            }\n                        </List>\n                    </Container> : null}\n\n\n                </Paper>\n            </div>\n        </div>\n    )\n}\n\nexport default AssessmentList;","\nimport React, { useContext, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport hljs from 'highlight.js';\nimport { CustomThemeContext } from '../../themes/CustomThemeProvider';\n\nconst styles = (theme: Theme) => (\n    createStyles({\n        listItem: {\n            marginTop: theme.spacing(1),\n        },\n        markdownItem: {\n            backgroundColor: theme.palette.background.paper,\n            textAlign: \"left\",\n            width:\"100%\"\n        }\n    })\n);\n\nconst useStyles = makeStyles(styles);\n\nconst options = {\n    overrides: {\n        h1: {\n            component: Typography,\n            props: {\n                gutterBottom: true,\n                variant: 'h5',\n            },\n        },\n        h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n        h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1', style:{margin:\"0.35em\"}} },\n        h4: {\n            component: Typography,\n            props: { gutterBottom: true, variant: 'caption', paragraph: true },\n        },\n        p: { component: Typography, props: { paragraph: true } },\n        a: { component: Link },\n        li: {\n            component: withStyles(styles)(({ classes, ...props }: { classes: any }) => (\n                <li className={classes.listItem}>\n                    <Typography component=\"span\" {...props} />\n                </li>\n            )), \n        },\n        img:{\n            props:{ style:{maxWidth:\"100%\"}}\n        }\n    },\n};\n\nexport default function Markdown(props: any) {\n    const classes = useStyles();\n    const rootRef = useRef<HTMLDivElement>(null);\n    const { currentTheme } = useContext(CustomThemeContext)\n\n    useEffect(() => {\n        if (currentTheme === \"light\") {\n            document?.querySelector(`link[title=\"light\"]`)?.removeAttribute(\"disabled\");\n            document?.querySelector(`link[title=\"dark\"]`)?.setAttribute(\"disabled\", \"disabled\");\n        } else {\n            document?.querySelector(`link[title=\"dark\"]`)?.removeAttribute(\"disabled\");\n            document?.querySelector(`link[title=\"light\"]`)?.setAttribute(\"disabled\", \"disabled\");\n        }\n\n        rootRef?.current?.querySelectorAll('pre code').forEach((block) => {\n            hljs.highlightBlock(block as HTMLElement);\n        });\n\n    }, [rootRef, currentTheme]);\n\n    return <div className={classes.markdownItem} ref={rootRef} ><ReactMarkdown options={options} {...props} /></div>;\n}","import { Box, FormControl, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { QuestionSet } from \"../../services/assessment\";\nimport Markdown from \"./MarkdownElement\";\n\ninterface Props {\n    questionSet: QuestionSet\n}\nconst QuestionComponent = (props: Props) => {\n    const { questionSet } = props;\n    const [value, setValue] = useState<number | null>(null)\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(parseInt((event.target as HTMLInputElement).value));\n      };\n\n\n    return (\n        <>\n            <Box display=\"block\" overflow=\"hidden\" style={{marginTop:\"10vh\"}}>\n            <Markdown>{questionSet.question}</Markdown>\n            <FormControl component=\"fieldset\">\n                <RadioGroup style={{marginLeft:\"12px\"}} aria-label=\"choice\" name=\"choices\" value={value} onChange={handleChange}>\n                    {questionSet.choice.map((choiceItem, idx) => <FormControlLabel key={idx} value={idx} control={<Radio />} label={<Markdown>{choiceItem}</Markdown>} />)}\n                    {/* <FormControlLabel value=\"female\" control={<Radio />} label={questionSet.choice[0]} />\n                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                    <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                    <FormControlLabel value=\"disabled\" control={<Radio />} label=\"(Disabled option)\" /> */}\n                </RadioGroup>\n            </FormControl>\n            </Box>\n        </>\n    )\n}\n\nexport default QuestionComponent;","import { Container, List, ListItem } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { AssessmentInfo, getAssessment, getAssessmentInfos, QuestionSet } from \"../../services/assessment\";\n\nimport QuestionComponent from \"./QuestionComponent\";\n\nconst Practice = () => {\n    const { title } = useParams<{ title: string }>();\n    const [assessment, setAssessment] = useState<{ assessmentInfo: AssessmentInfo, questionSets: QuestionSet[] }>()\n\n\n\n    useEffect(() => {\n        const localAssessment = localStorage.getItem(title)\n\n        if (localAssessment) {\n            setAssessment(JSON.parse(localAssessment))\n            console.log(\"available in local storage\")\n        } else {\n            console.log(\"not available in local storage\")\n            getAssessmentInfos().then(assessmentInfos => {\n                const assessmentInfo = assessmentInfos?.filter(assessmentInfo => assessmentInfo.title === title)[0]\n                if (assessmentInfo) {\n                    getAssessment(assessmentInfo).then(assessment => setAssessment(assessment))\n                }\n                else {\n                    alert(\"Fail to retrieve assessment\")\n                }\n            })\n        }\n\n\n    }, [title])\n\n    return (\n        <Container>\n            <List>\n                {assessment?.questionSets.map((questionSet, idx) => <ListItem key={idx}>\n                    <QuestionComponent questionSet={questionSet}></QuestionComponent>\n                </ListItem>)}\n            </List>\n        </Container>\n    )\n}\n\nexport default Practice","import React from 'react';\n\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport { NavigationBar } from '../common';\nimport AssessmentList from \"../AssessmentList/AssessmentList\";\nimport Practice from \"../Practice/Practice\";\n\nconst TmpDiv = (props: { content: string }) => {\n  const { content } = props;\n  \n  return (<header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      Edit <code>{content}</code> and save to reload.\n        </p>\n    <a\n      className=\"App-link\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      learn react\n        </a>\n  </header>\n  )\n}\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavigationBar />\n        <Switch>\n          <Route exact path=\"/\" render={\n            () => <Redirect to=\"/assessment-list\" />\n          } />\n          <Route exact path=\"/assessment-list\">\n            <AssessmentList/>\n          </Route>\n          <Route path=\"/practice/:title\">\n            <Practice/>\n          </Route>\n          <Route exact path=\"/about-me\">\n            <TmpDiv content={\"About me\"} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components';\nimport reportWebVitals from './reportWebVitals';\nimport CustomThemeProvider from './themes/CustomThemeProvider'\nimport { CssBaseline } from '@material-ui/core';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <CustomThemeProvider>\n      <CssBaseline />\n      <App />\n    </CustomThemeProvider>\n  // </React.StrictMode>,\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}